import csv

f = open("guns.csv", "r")
content = csv.reader(f)
data = list(content)
print(data[:5])

headers = data[0]
data = data[1:]

print(headers)
print(data[:5])

year_counts = {}
years = []
for crime in data:
    years.append(crime[1])
for yr in years:
    if yr in year_counts:
        year_counts[yr] += 1
    else:
        year_counts[yr] = 1
print(year_counts)

import datetime
date_counts = {}

dates = []
for item in data:
    date = datetime.datetime(year = int(item[1]), month = int(item[2]), day = 1)
    dates.append(date)
    
#print(dates[:5])
for item in dates:
    if item in date_counts:
        date_counts[item] += 1
    else:
        date_counts[item] = 1
print(date_counts)

sexes = [item[5] for item in data]
races = [item[7] for item in data]

sex_counts = {}
race_counts = {}

for item in sexes:
    if item in sex_counts:
        sex_counts[item] += 1
    else:
        sex_counts[item] = 1
        
for item in races[1:]:
    if item in race_counts:
        race_counts[item] += 1
    else:
        race_counts[item] = 1

print(sex_counts)
print(race_counts)

f1 = open("census.csv", "r")
census = list(csv.reader(f1))
print(census)

import math
mapping = {}
race_per_hundredk = {}

#Converting STRINGS to INTEGERS for calculation
#for idx, num in enumerate(census[1]):
#    if idx in range(9, 17):
#        census[1][idx] = int(num)

for k,v in race_counts.items():
    if k == 'Asian/Pacific Islander':
        mapping[k] = census[1][14] + census[1][15]
    elif k == 'Black':
        mapping[k] = census[1][12]
    elif k == 'Hispanic':
        mapping[k] = census[1][11]
    elif k == 'Native American/Native Alaskan':
        mapping[k] = census[1][13]
    elif k == 'White':
        mapping[k] = census[1][10]

for race, val in race_counts.items():
    race_per_hundredk[race] = math.trunc((val*100000/mapping[race]))
    
print(race_per_hundredk)

import math
homicide_race_counts = {}
hom_race_per_hundredk = {}

intents = [item[3] for item in data[1:]]
races = [item[7] for item in data[1:]]
#print(intents)
#print(races)

for i, race in enumerate(races):
    if intents[i] == 'Homicide':
        if race in homicide_race_counts:
            homicide_race_counts[race] += 1
        else:
            homicide_race_counts[race] = 1
            
#print(homicide_race_counts)

for race, val in homicide_race_counts.items():
    hom_race_per_hundredk[race] = math.trunc((val*100000/mapping[race]))
print(hom_race_per_hundredk)
